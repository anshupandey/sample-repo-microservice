name: deploy-staging

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'microservices/hello-fastapi/**'
      - '.github/workflows/deploy-staging.yml'
      - 'infra/**'

permissions:
  id-token: write
  contents: read

env:
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  RESOURCE_GROUP: ${{ vars.AZ_RESOURCE_GROUP }}
  REGION: ${{ vars.AZ_REGION }}
  ACR_NAME: ${{ vars.AZ_ACR_NAME }}
  ACI_NAME: ${{ vars.AZ_ACI_NAME }}
  IMAGE_NAME: hello-fastapi
  IMAGE_TAG: ${{ github.sha }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: Build and push image to ACR
        run: |
          az acr login --name $ACR_NAME
          docker build -t ${ACR_NAME}.azurecr.io/${IMAGE_NAME}:${IMAGE_TAG} microservices/hello-fastapi
          docker push ${ACR_NAME}.azurecr.io/${IMAGE_NAME}:${IMAGE_TAG}

      - name: Provision/update resources
        run: |
          az group create -n $RESOURCE_GROUP -l $REGION
          az acr show -n $ACR_NAME || az acr create -n $ACR_NAME -g $RESOURCE_GROUP --sku Basic
          USERNAME=$(az acr credential show -n $ACR_NAME --query username -o tsv)
          PASSWORD=$(az acr credential show -n $ACR_NAME --query passwords[0].value -o tsv)
          az container create \
            -g $RESOURCE_GROUP \
            -n $ACI_NAME \
            --image ${ACR_NAME}.azurecr.io/${IMAGE_NAME}:${IMAGE_TAG} \
            --registry-login-server ${ACR_NAME}.azurecr.io \
            --registry-username $USERNAME \
            --registry-password $PASSWORD \
            --ports 8080 \
            --cpu 1 --memory 1.5 \
            --environment-variables ASPNETCORE_URLS=http://+:8080 \
            --restart-policy Always \
            --dns-name-label "$ACI_NAME-${GITHUB_RUN_NUMBER}"
          az container restart -g $RESOURCE_GROUP -n $ACI_NAME || true
          echo "Public FQDN:"
          az container show -g $RESOURCE_GROUP -n $ACI_NAME --query ipAddress.fqdn -o tsv
